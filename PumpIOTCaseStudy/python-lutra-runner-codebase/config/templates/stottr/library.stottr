@prefix ax:           <http://tpl.ottr.xyz/owl/axiom/0.1/> .
@prefix dc:           <http://purl.org/dc/elements/1.1/> .
@prefix dcterms:      <http://purl.org/dc/terms/> .
@prefix ex:           <http://example.org/> .
@prefix fmea:         <http://example.com/ns/asset-maintenance/fmea/> .
@prefix fmea-tmp:     <http://tpl.ottr.xyz/p/asset-maintenance/fmea/0.2/> .
@prefix foaf:         <http://xmlns.com/foaf/0.1/> .
@prefix inter:        <http://tpl.ottr.xyz/p/asset-maintenance/interface/0.2/> .
@prefix iso-tmp:      <http://tpl.ottr.xyz/p/asset-maintenance/iso14224/0.2/> .
@prefix lis:          <http://rds.posccaesar.org/ontology/lis14/rdl/> .
@prefix listpl:       <http://rds.posccaesar.org/ontology/lis14/tpl/0.1/> .
@prefix macro:        <http://tpl.ottr.xyz/p/asset-maintenance/owl/macro/0.1/> .
@prefix o-docttr:     <http://tpl.ottr.xyz/p/docttr/0.1/> .
@prefix o-owl-ax:     <http://tpl.ottr.xyz/owl/axiom/0.1/> .
@prefix o-owl-dec:    <http://tpl.ottr.xyz/owl/declaration/0.1/> .
@prefix o-owl-ma:     <http://tpl.ottr.xyz/owl/macro/0.1/> .
@prefix o-owl-re:     <http://tpl.ottr.xyz/owl/restriction/0.1/> .
@prefix o-owl-ut:     <http://tpl.ottr.xyz/owl/util/0.1/> .
@prefix o-pizza:      <http://tpl.ottr.xyz/pizza/0.1/> .
@prefix o-rdf:        <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix o-rdfs:       <http://tpl.ottr.xyz/rdfs/0.2/> .
@prefix om:           <http://www.ontology-of-units-of-measure.org/resource/om-2/> .
@prefix ont:          <http://data.grundfos.com/ontology/pump/ont/> .
@prefix ottr:         <http://ns.ottr.xyz/0.4/> .
@prefix owl:          <http://www.w3.org/2002/07/owl#> .
@prefix pav:          <http://purl.org/pav/> .
@prefix plmtpl:       <http://rds.posccaesar.org/ontology/plm/tpl/0.1/> .
@prefix pz:           <http://www.co-ode.org/ontologies/pizza/pizza.owl#> .
@prefix rdf:          <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:         <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdl:          <http://rds.posccaesar.org/ontology/plm/rdl/> .
@prefix reqtpl:       <http://w3id.org/requirement-ontology/tpl/0.1/> .
@prefix rstr:         <http://tpl.ottr.xyz/owl/restriction/0.1/> .
@prefix sd:           <http://www.w3.org/ns/sparql-service-description#> .
@prefix skos:         <http://www.w3.org/2004/02/skos/core#> .
@prefix tmp:          <http://tpl.ottr.xyz/p/asset-maintenance/general/0.2/> .
@prefix tmp1:         <http://tpl.ottr.xyz/p/asset-maintenance/general/0.1/> .
@prefix tmp2:         <http://tpl.ottr.xyz/p/asset-maintenance/general/0.2/> .
@prefix vann:         <http://purl.org/vocab/vann/> .
@prefix void:         <http://rdfs.org/ns/void#> .
@prefix wo-tmp:       <http://tpl.ottr.xyz/p/asset-maintenance/work-orders/0.1/> .
@prefix x:            <http://example.ottr.xyz/argument/> .
@prefix xml:          <http://www.w3.org/XML/1998/namespace> .
@prefix xsd:          <http://www.w3.org/2001/XMLSchema#> .
@prefix ido-tpl:      <http://example.com/ido/> .
@prefix lis:          <http://rds.posccaesar.org/ontology/lis14/rdl/> .

ido-tpl:ObjectWithPhysicalContextClass[
    ! owl:Class ?class,
    ? List<owl:Class> ?superclass,
    !? xsd:string ?label,
    ? List<xsd:string> ?visibleInDiagram,
    !? xsd:string ?description,
    ? List<rdfs:Resource> ?seeAlso,
    ? ottr:IRI ?definedBy,
    !? List<owl:Class> ?functionalParts,
    !? List<owl:Class> ?connectedTo,
    !? List<owl:Class> ?residesIn
] :: {
   plmtpl:RDLClass(?class, ?superclass, ?label, ?description, ?seeAlso, ?definedBy),
   ido-tpl:VisibleInDiagram(?class, ?visibleInDiagram),
   cross | o-owl-ax:SubSomeValuesFrom(?class, lis:hasFunctionalPart, ++?functionalParts),
   cross | o-owl-ax:SubSomeValuesFrom(?class, lis:connectedTo, ++?connectedTo),
   cross | o-owl-ax:SubSomeValuesFrom(?class, lis:residesIn, ++?residesIn)
} .

ido-tpl:ObjectWithPhysicalContextIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? List<owl:NamedIndividual> ?functionalParts,
  !? List<owl:NamedIndividual> ?connectedTo,
  !? List<owl:NamedIndividual> ?contains,
  !? List<owl:NamedIndividual> ?concretizes,
  !? List<owl:NamedIndividual> ?hasFunction,
  !? List<owl:NamedIndividual> ?participantIn,
  !? List<owl:NamedIndividual> ?hasPhysicalQuantity,
  !? List<owl:NamedIndividual> ?hasQuality
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  cross | ottr:Triple(?individual, lis:hasFunctionalPart, ++?functionalParts),
  cross | ottr:Triple(?individual, lis:connectedTo, ++?connectedTo),
  cross | ottr:Triple(?individual, lis:contains, ++?contains),
  cross | ottr:Triple(?individual, lis:concretizes, ++?concretizes),
  cross | ottr:Triple(?individual, lis:hasFunction, ++?hasFunction),
  cross | ottr:Triple(?individual, lis:participantIn, ++?participantIn),
  cross | ottr:Triple(?individual, lis:hasPhysicalQuantity, ++?hasPhysicalQuantity),
  cross | ottr:Triple(?individual, lis:hasQuality, ++?hasQuality)
} .

ido-tpl:QualityClass [
    ! owl:Class ?class,
    ? List<owl:Class> ?superclass,
    !? xsd:string ?label,
    ? List<xsd:string> ?visibleInDiagram,
    !? xsd:string ?description,
    ? List<rdfs:Resource> ?seeAlso,
    ? ottr:IRI ?definedBy
] :: {
   plmtpl:RDLClass(?class, ?superclass, ?label, ?description, ?seeAlso, ?definedBy),
   ido-tpl:VisibleInDiagram(?class, ?visibleInDiagram)
} .

# todo: add data property restriction here
ido-tpl:QualityDatumClass [
    ! owl:Class ?class,
    ? List<owl:Class> ?superclass,
    !? xsd:string ?label,
    !? xsd:string ?description,
    ? List<rdfs:Resource> ?seeAlso,
    ? ottr:IRI ?definedBy,
    !? ottr:IRI ?sigDigitsDatatype,
    !? ottr:IRI ?sigDigitsRestriction,
    !? xsd:integer ?sigDigitsValue
] :: {
   plmtpl:RDLClass(?class, ?superclass, ?label, ?description, ?seeAlso, ?definedBy)
} .

ido-tpl:ActivityIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? List<owl:NamedIndividual> ?hasPart,
  !? List<owl:NamedIndividual> ?hasPassiveParticipant,
  !? List<owl:NamedIndividual> ?hasResult,
  !? List<owl:NamedIndividual> ?hasInput,
  !? List<owl:NamedIndividual> ?realizes
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  cross | ottr:Triple(?individual, lis:hasPart, ++?hasPart),
  cross | ottr:Triple(?individual, lis:hasPassiveParticipant, ++?hasPassiveParticipant),
  cross | ottr:Triple(?individual, ex:hasResult, ++?hasResult),
  cross | ottr:Triple(?individual, ex:hasInput, ++?hasInput),
  cross | ottr:Triple(?individual, lis:realizes, ++?realizes)
} .

ido-tpl:PhysicalQuantityIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? List<owl:NamedIndividual> ?qualityQuantifiedAs
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  cross | ottr:Triple(?individual, lis:qualityQuantifiedAs, ++?qualityQuantifiedAs)
} .


ido-tpl:ActivityProfileIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? List<owl:NamedIndividual> ?hasParticipant,
  !? List<owl:NamedIndividual> ?profileOfQuality,
  !? List<owl:NamedIndividual> ?partOf,
  !? List<owl:NamedIndividual> ?observedProperty,
  !? List<owl:NamedIndividual> ?profileQuantityDatum
] :: {
  plmtpl:RDLIndividual(?individual, ?type, ?label, ?description, ?seeAlso, ?definedBy),
  ido-tpl:VisibleInDiagram(?individual, ?visibleInDiagram),
  cross | ottr:Triple(?individual, lis:hasParticipant, ++?hasParticipant),
  cross | ottr:Triple(?individual, lis:profileOfQuality, ++?profileOfQuality),
  cross | ottr:Triple(?individual, lis:partOf, ++?partOf),
  cross | ottr:Triple(?individual, ex:observedProperty, ++?observedProperty),
  cross | ottr:Triple(?individual, lis:profileQuantityDatum, ++?profileQuantityDatum)
} .

ido-tpl:SoftwareIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? xsd:integer ?majorVersion,
  !? xsd:integer ?minorVersion,
  !? xsd:integer ?patchVersion
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  ottr:Triple(?individual, ex:majorVersion, ?majorVersion),
  ottr:Triple(?individual, ex:minorVersion, ?minorVersion),
  ottr:Triple(?individual, ex:patchVersion, ?patchVersion)
} .

ido-tpl:QualityDatumIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? xsd:decimal ?multipleOf,
  ? xsd:integer ?hasResolutionBits
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  ottr:Triple(?individual, ex:multipleOf, ?multipleOf),
  ottr:Triple(?individual, ex:hasResolutionBits, ?hasResolutionBits)
} .

ido-tpl:InformationObjectIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy,
  !? owl:NamedIndividual ?concretizedBy,
  ? xsd:string ?hasFormHref
] :: {
  ido-tpl:IdoIndividual(?individual, ?type, ?label, ?visibleInDiagram, ?description, ?seeAlso, ?definedBy),
  ottr:Triple(?individual, lis:concretizedBy, ?concretizedBy),
  ottr:Triple(?individual, ex:hasFormHref, ?hasFormHref)
} .

ido-tpl:VisibleInDiagram [
  ! ottr:IRI ?entity,
  ? List<xsd:string> ?visibleInDiagram
] :: {
  cross | ottr:Triple(?entity, ex:visibleInDiagram, ++?visibleInDiagram) 
} .

ido-tpl:IdoIndividual [
  ! owl:NamedIndividual ?individual,
  ? List<owl:Class> ?type,
  !? xsd:string ?label,
  ? List<xsd:string> ?visibleInDiagram,
  !? xsd:string ?description,
  ? List<rdfs:Resource> ?seeAlso,
  ? ottr:IRI ?definedBy
] :: {
  plmtpl:RDLIndividual(?individual, ?type, ?label, ?description, ?seeAlso, ?definedBy),
  ido-tpl:VisibleInDiagram(?individual, ?visibleInDiagram)
} .